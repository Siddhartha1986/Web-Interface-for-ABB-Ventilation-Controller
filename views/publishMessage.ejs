<%- include('header') -%>
<!-- Page content-->
<script>
	$(function () {
		MQTTconnect();
	});
	var connected_flag = 0
	var mqtt;
	var reconnectTimeout = 2000;

	function onConnectionLost() {
		console.log("connection lost");
		document.getElementById("messages").innerHTML = "Connection Lost";
		connected_flag = 0;
	}

	function onFailure(message) {
		console.log("Failed");
		document.getElementById("messages").innerHTML = "Connection Failed- Retrying";
		setTimeout(MQTTconnect, reconnectTimeout);
	}

	function onMessageArrived(r_message) {
		out_msg = "Message received " + r_message.payloadString + "<br>";
		out_msg = out_msg + "Message received Topic " + r_message.destinationName;
		console.log(out_msg);
		document.getElementById("messages").innerHTML = out_msg;
	}

	function onConnected(recon, url) {
		console.log(" in onConnected " + reconn);
	}

	function onConnect() {
		// Once a connection has been made, make a subscription and send a message.
		document.getElementById("messages").innerHTML = "Connected to " + host + " on port " + port;
		connected_flag = 1
		console.log("on Connect " + connected_flag);
	}

	function MQTTconnect() {
		document.getElementById("messages").innerHTML = "";
		var s = document.forms["smessage"]["server"].value;
		var p = document.forms["smessage"]["port"].value;
		if (p != "") {
			console.log("ports");
			port = parseInt(p);
			console.log("port" + port);
		}
		if (s != "") {
			host = s;
			console.log("host");
		}
		console.log("connecting to " + host + " " + port);
		var x = Math.floor(Math.random() * 10000);
		var cname = "clientID-" + Math.round(new Date().getTime() / 1000); //"orderform-"+x;
		mqtt = new Paho.MQTT.Client(host, port, cname);
		var options = {
			timeout: 3,
			onSuccess: onConnect,
			onFailure: onFailure,

		};

		mqtt.onConnectionLost = onConnectionLost;
		mqtt.onMessageArrived = onMessageArrived;
		mqtt.connect(options);
		return false;


	}

	function sub_topics() {
		document.getElementById("messages").innerHTML = "";
		if (connected_flag == 0) {
			out_msg = "<b>Not Connected so can't subscribe</b>"
			console.log(out_msg);
			document.getElementById("messages").innerHTML = out_msg;
			return false;
		}
		var stopic = document.forms["subs"]["Stopic"].value;
		console.log("Subscribing to topic =" + stopic);
		mqtt.subscribe(stopic);
		return false;
	}

	function send_message() {
		if (connected_flag == 0) {
			out_msg = "<b>Not Connected so can't send</b>"
			console.log(out_msg);
			document.getElementById("messages").innerHTML = out_msg;
			return false;
		}
		var msg = document.forms["smessage"]["txtmessages"].value;
		console.log(msg);

		var topic = document.forms["smessage"]["Ptopic"].value;
		message = new Paho.MQTT.Message(msg);
		if (topic == "")
			message.destinationName = "test-topic"
		else
			message.destinationName = topic;
		mqtt.send(message);
		$("#messages").append("</br>Message publish with topic " + topic + " and message text " + msg);
		return false;
	}
</script>
<div class="container-fluid">
	<p class="clearfix"> </p>
	<div class="row">
		<form name="smessage" id="connection-info-form">
			<b>Hostname or IP Address:</b>
			<input id="host" type="text" name="server" value="<%= locals.getServer %>"><br>
			<b>Port:</b>
			<input id="port" type="text" name="port" value="<%= locals.getPort %>"><br>
			<b>Topic to publish:</b>
			<input id="txtTopic" type="text" name="Ptopic" value="<%= locals.getPublishText %>"><br><br>
			<b>Text to publish:</b>
			<input id="txtmessages" type="text" name="message"
				value="<%= JSON.parse(JSON.stringify(locals.getMessage)) %>"><br><br>
			<input type="button" id="btnPublish" value="Publish" onclick="return send_message()">
			<!--<input type="button" onclick="startDisconnect()" value="Disconnect">-->
		</form>
	</div>
	<div id="messages"></div>
</div>

<%- include('footer') -%>